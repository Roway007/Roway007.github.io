<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Roy Quiñonez</title>
		<description></description>
		<link>/</link>
		<atom:link href="/" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Fundamentos de la ingenieria de software!</title>
				<description>&lt;p&gt;&lt;strong&gt;Fundamentos de la Ingenieria de Software&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Definición de IS&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fritz Bauer&lt;/strong&gt;, 1969: Más que una disciplina o una parte del
conocimiento, la Ingeniería es un verbo, una palabra de acción,
un modo de enfocar el problema.&lt;/p&gt;

&lt;p&gt;La &lt;strong&gt;Ingeniería del Software&lt;/strong&gt; es el establecimiento y uso de
principios robustos de la ingeniería a fin de obtener
económicamente so=ware que sea fiable y que funcione
eficientemente sobre maquinas reales.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bohem, 1976&lt;/strong&gt;: Ingeniería del Software es la aplicación practica
del conocimiento científico en el diseño y construcción de
programas de computadora y la documentación necesaria
requerida para desarrollar, operar (funcionar) y mantenerlos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mills, 1980&lt;/strong&gt;: La Ingeniería de Software tiene como uno de sus
principales objetivos la producción de programas que cumplan
las especificaciones, y que se demuestren correctos, producidos
en el plazo y costo adecuado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Meyer, 1988&lt;/strong&gt;: La Ingeniería de Software es la producción de
software de calidad.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IEEE 1993&lt;/strong&gt;: La Ingeniería de Software es la aplicación de un
enfoque sistemático, disciplinado y cuantificable hacia el
desarrollo, operación y mantenimiento del software; es decir, la
aplicación de Ingeniería de Software.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Objetivos de la IS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;-Diseñar programas informáBcos que se adecúen a las exigencias
de la sociedad.&lt;/p&gt;

&lt;p&gt;-Liderar y acoplar el desarrollo de programaciones complicadas.&lt;/p&gt;

&lt;p&gt;-Actuar en todas las fases del ciclo de vida de un producto.&lt;/p&gt;

&lt;p&gt;-Computar los costos de un proyecto y evaluar los Bempos de
desarrollo.&lt;/p&gt;

&lt;p&gt;-Realizar el seguimiento de costes y plazos.&lt;/p&gt;

&lt;p&gt;-Liderar equipos de trabajo de desarrollo soIware.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;La crisis del software&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Cómo se define crisis?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;-La palabra crisis se define en el diccionario como “un punto
decisivo en el curso de algo; momento, etapa, o evento decisivo
o crucial”. Sin embargo para el software no ha habido ningún
punto crucial, sólo una lenta evolución.&lt;/p&gt;

&lt;p&gt;-La crisis en la industria del software permanece durante
muchos años, lo cual parece una contradicción para el término.&lt;/p&gt;

&lt;p&gt;-Lo que si se podría decir es que hay un problema crónico en el
desarrollo de software.&lt;/p&gt;

</description>
				<pubDate>Thu, 19 Dec 2019 00:00:00 -0500</pubDate>
				<link>/2019/12/19/Fundamentos-de-la-ingenieria-de-software.html</link>
				<guid isPermaLink="true">/2019/12/19/Fundamentos-de-la-ingenieria-de-software.html</guid>
			</item>
		
			<item>
				<title>Proceso de ingenieria de software!</title>
				<description>&lt;p&gt;&lt;strong&gt;Proceso de Ingeniería de software&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Factores de calidad del software&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Concepto de Calidad&lt;/strong&gt;: Conjunto de propiedades y de
características de un producto o servicio, que le confieren
aptitud para satisfacer una necesidad explícita o implícita (ISO
8402).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Calidad del Software&lt;/strong&gt;: Es el grado con el que un sistema,
componente o proceso cumple los requerimientos
especificados y las necesidades o expectativas del cliente o
usuario.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Factores que determinan la calidad del soIware.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Se pueden clasificar en dos grandes grupos (Pressman):&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Medidas Directas&lt;/strong&gt;: La medida o medición decimos que es directa,
cuando disponemos de un instrumento de medida que nos
muestra un resultado (generalmente numérico).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Medidas Indirectas&lt;/strong&gt;: Cuando hablamos de sistemas informáBcos
no siempre es posible realizar una medida directa, porque no
disponemos del instrumento adecuado que nos permita realizar
esa medición.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Métricas del Software&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Son las que están relacionadas con el desarrollo del software
como funcionalidad, complejidad, eficiencia.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Entre las métricas del software tenemos las siguientes:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Métricas técnicas&lt;/strong&gt;: Se centran en las características del
software. Aquí medimos la complejidad lógica y el grado de
modularidad del sistema. Mide la estructura del sistema, el
cómo está hecho.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Métricas de calidad&lt;/strong&gt;: Son todas las métricas de software que
definen de una u otra forma la calidad del software; tales como
corrección, exactitud, integridad, facilidad de uso,
estructuración o modularidad, pruebas, facilidad de
mantenimiento, reusabilidad, cohesión del módulo,
acoplamiento del módulo, etc.&lt;/p&gt;

&lt;p&gt;Estas son los puntos críticos en el diseño, codificación, pruebas y
mantenimiento.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Corrección&lt;/strong&gt;: es el grado en que el software desempeña la
función para la que fue creado y se mide en defectos por KLDC.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Facilidad de Mantenimiento&lt;/strong&gt;: es la sencillez con que un
programa puede corregirse si se encuentra un error, al
adaptarse si su entorno cambio o mejorar si el cliente cambia
los requisitos y se mide en forma indirecta en TMC (Tiempo
Medio de Cambio).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Integridad&lt;/strong&gt;: es la habilidad de un sistema para resisBr ataques
que requiere la definición de amenaza y seguridad y se calcula:
integridad = 1 – (amenaza * (1 – seguridad)).&lt;/p&gt;
</description>
				<pubDate>Wed, 18 Dec 2019 00:00:00 -0500</pubDate>
				<link>/2019/12/18/Proceso-de-ingenieria-de-sowftware.html</link>
				<guid isPermaLink="true">/2019/12/18/Proceso-de-ingenieria-de-sowftware.html</guid>
			</item>
		
			<item>
				<title>Procesos de Software</title>
				<description>&lt;p&gt;&lt;strong&gt;Procesos de Software&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;El proceso de SW.&lt;/p&gt;

&lt;p&gt;Un conjunto estructurado de actividades necesarias para
desarrollar un sistema de software.&lt;/p&gt;

&lt;p&gt;•Muchos de los procesos de software son diferentes, pero todos
implican:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;•Especificación&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;•Diseño e implementación&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;•Validación&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;•Evolución&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ciclo de vida del SW.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Estas fases pueden ser:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Temporales&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Forman una secuencia en el tiempo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lógicas&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cuando representan pasos o etapas que no constituyen
una secuencia temporal.&lt;/p&gt;

</description>
				<pubDate>Tue, 17 Dec 2019 00:00:00 -0500</pubDate>
				<link>/2019/12/17/Procesos-Software.html</link>
				<guid isPermaLink="true">/2019/12/17/Procesos-Software.html</guid>
			</item>
		
			<item>
				<title>Modelos de proceso software</title>
				<description>&lt;p&gt;&lt;strong&gt;Ingeniería de software orientado a reutilización.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;•Elsistemaseensamblaapartirdecomponentesexistentes.Puedeserelplanimpulsadooágil.&lt;/p&gt;

&lt;p&gt;•En la práctica,la mayoría de los grandes sistemas se desarrollan mediante un proceso que incorpora elementos de todos estos modelos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ModelodeCascada&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;•Las fases están identificadas por separado:&lt;/p&gt;

&lt;p&gt;•El análisis y definición de requerimientos&lt;/p&gt;

&lt;p&gt;•Diseño del sistema y software.&lt;/p&gt;

&lt;p&gt;•Pruebas de implementación de unidades&lt;/p&gt;

&lt;p&gt;•Integración y pruebas del sistema&lt;/p&gt;

&lt;p&gt;•Operación y mantenimiento&lt;/p&gt;

&lt;p&gt;•Elprincipal inconveniente del modelo de la cascada es la dificultad de acomodar el cambio después de que está en marcha el proceso.En principio,una fase tiene que ser completada antes de pasar a la siguiente
fase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desarrolloincremental&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;•Beneficios:&lt;/p&gt;

&lt;p&gt;•Elcostodeatenderlasnecesidadescambiantesdelosclientessereduce.&lt;/p&gt;

&lt;p&gt;•Lacantidaddeanálisisyladocumentaciónquetienequeserhechodenuevoesmuchomenorquelaqueserequiereconelmodelodecascada.&lt;/p&gt;

&lt;p&gt;•Esmásfácilobtenerretroalimentacióndelosclienteseneltrabajodedesarrolloquesehahecho.&lt;/p&gt;

&lt;p&gt;•Losclientespuedenhacercomentariossobrelasmanifestacionesdelsoftwareyvercuántosehaimplementado&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Espiral&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;•Definición(i):&lt;/p&gt;

&lt;p&gt;•EsunmodelodeciclodevidadesarrolladoporBarryBoehmen1988.&lt;/p&gt;

&lt;p&gt;•Lasactividadesdeestemodelosonunaespiral,cadabucleesunaactividad.&lt;/p&gt;

&lt;p&gt;•Lasactividadesnoestánfijadasaprioridad,sinoquelassiguientesseeligenenfuncióndelanálisisderiesgo,comenzandoporelbucleinterior.&lt;/p&gt;

</description>
				<pubDate>Mon, 16 Dec 2019 00:00:00 -0500</pubDate>
				<link>/2019/12/16/Modelos-de-procesos-Software.html</link>
				<guid isPermaLink="true">/2019/12/16/Modelos-de-procesos-Software.html</guid>
			</item>
		
	</channel>
</rss>
